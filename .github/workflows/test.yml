name: "build"
on:
  pull_request:
    types: [opened]
    branches:
      - "main"
    paths-ignore:
      - "README.md"
      - "docs/*"
      - ".git*"
  push:
    branches:
      - main
      - feature/*
    paths-ignore:
      - "README.md"
      - "docs/*"
      - ".git*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      default-matrix: ${{ steps.test-defaults.outputs.matrix }}
      inputs-matrix: ${{ steps.test-inputs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Get all files
        id: files
        run: |
          files=($(find examples/src/terraform -type f))
          printf -v joined '"%s", ' "${files[@]}"
          echo "stringArray=$(echo "[${joined%s,}\"ignore\"]")" >> $GITHUB_OUTPUT
          echo "jsonArray=$(jq -c --argjson array "${files}" -n '$array')" >> $GITHUB_OUTPUT

      - name: Test with string array and defaults
        uses: ./
        id: stringArray
        with:
          files: ${{ steps.files.outputs.stringArray }}
          base_directory: 'examples/src/terraform'

      - name: Test with json array and defaults
        uses: ./
        id: jsonArray
        with:
          files: ${{ fromJson(steps.files.outputs.jsonArray) }}
          base_directory: 'examples/src/terraform'

      - name: Test with inputs
        uses: ./
        id: inputs
        with:
          files: ${{ fromJson(steps.files.outputs.jsonArray) }}
          base_directory: 'examples/src/terraform'
          providers: 'aws|azure'
          environments: 'sbx|dev|stage|prod'
          regions: 'us-west-1|us-east-1'
          resource_groups: 'cluster|lambda'
          global_files: |
            - 'examples/src/terraform/aws/terragrunt.hcl'
            - 'examples/src/terraform/aws/global.hcl'

  matrix:
    if: github.event_name == 'workflow_dispatch'
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.test.outputs.matrix) }}
    steps:
      - run: |
          echo "provider=${{ matrix.provider }}" >> $GITHUB_OUTPUT
          echo "env=${{ matrix.env }}" >> $GITHUB_OUTPUT
          echo "region=${{ matrix.region }}" >> $GITHUB_OUTPUT
          echo "resource_group=${{ matrix.resource_group }}" >> $GITHUB_OUTPUT
      - run: |
          echo "Planning ${{ format('{0}/{1}/{2}/{3}', matrix.provider, matrix.env, matrix.region, matrix.resource_group) }}" >> $GITHUB_STEP_SUMMARY
