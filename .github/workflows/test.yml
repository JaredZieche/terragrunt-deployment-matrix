name: "build"
on:
  pull_request:
    types: [opened]
    branches:
      - "main"
    paths-ignore:
      - "README.md"
      - "docs/*"
      - ".git*"
  push:
    branches:
      - main
      - feature/*
    paths-ignore:
      - "README.md"
      - "docs/*"
      - ".git*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      default-matrix: ${{ steps.test-defaults.outputs.matrix }}
      inputs-matrix: ${{ steps.test-inputs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Get all files
        id: files
        shell: bash
        run: |
          printf -v joined '"%s", ' $(cat examples/standard.txt)
          files=$(echo "[${joined%s,}\"ignore\"]")
          echo "inputFiles=$(echo ${files[@]} | jq -c)" >> $GITHUB_OUTPUT
          dirname $(cat examples/standard.txt) | xargs mkdir -p
          for file in $(cat examples/standard.txt); do touch $file; done

      - name: Test with files and defaults
        uses: ./
        id: defaults
        with:
          files: ${{ steps.files.outputs.inputFiles }}

      - name: Test global change
        uses: ./
        id: global-inputs
        with:
          files: '["src/terraform/aws/sbx/us-west-1/cluster/eks/terragrunt.hcl", "src/terraform/aws/global.hcl"]'
          base_directory: 'src/terraform'
          providers: 'aws|azure'
          environments: 'sbx|dev|stage|prod'
          regions: 'us-west-1|us-east-1'
          resource_groups: 'cluster|lambda'
          global_files: '["examples/src/terraform/aws/terragrunt.hcl", "examples/src/terraform/aws/global.hcl"]'

      - name: Test no files change
        continue-on-error: true
        uses: ./
        id: no-inputs
        with:
          files: ""
          base_directory: 'src/terraform'
          providers: 'aws|azure'
          environments: 'sbx|dev|stage|prod'
          regions: 'us-west-1|us-east-1'
          resource_groups: 'cluster|lambda'

      - name: Test with multi-line inputs
        uses: ./
        id: multi-line-inputs
        with:
          files: ${{ steps.files.outputs.inputFiles }}
          base_directory: 'src/terraform'
          providers: 'aws|azure'
          environments: 'sbx|dev|stage|prod'
          regions: 'us-west-1|us-east-1'
          resource_groups: 'cluster|lambda'
          global_files: |
            "examples/src/terraform/aws/terragrunt.hcl"
            "examples/src/terraform/aws/global.hcl"

  matrix:
    if: github.event_name == 'workflow_dispatch'
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.test.outputs.matrix) }}
    steps:
      - run: |
          echo "provider=${{ matrix.provider }}" >> $GITHUB_OUTPUT
          echo "env=${{ matrix.env }}" >> $GITHUB_OUTPUT
          echo "region=${{ matrix.region }}" >> $GITHUB_OUTPUT
          echo "resource_group=${{ matrix.resource_group }}" >> $GITHUB_OUTPUT
      - run: |
          echo "Planning ${{ format('{0}/{1}/{2}/{3}', matrix.provider, matrix.env, matrix.region, matrix.resource_group) }}" >> $GITHUB_STEP_SUMMARY
