name: 'Terragrunt Directory Check'
author: zorg
description: |
  Check files to determine infrastructure deployment. Useful when attempting to determine what changes will occur as the result of a pull request. Currently modeled after a typical infrastructure layout using [Terragrunt](https://terragrunt.gruntwork.io/) and [Terraform](https://www.terraform.io/). Resulting output is generated in the form of an [include matrix](https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#example-expanding-configurations). This matrix can then be passed to a subsequent job using the matrix strategy to generate a job for each environment. Inputs are combined into a jq query and can use [jq regex syntax](https://stedolan.github.io/jq/manual/#RegularexpressionsPCRE)
inputs:
  files:
    description: 'Files to inspect in order to make a decision on deployment'
    required: true
  base-directory:
    description: 'The base directory relative to the repo root from which to capture paths'
    required: true
    default: 'src/terraform'
  providers:
    description: 'Types of terraform providers to capture'
    required: true
    default: "aws"
  environments:
    description: 'What are the names of the environments to check for'
    required: true
    default: "sbx"
  regions:
    description: 'What are the available regions to deploy in'
    required: true
    default: "us-west-1"
  resource_groups:
    description: 'Regex patterns to match that determines which directories terragrunt can be executed from'
    required: true
    default: "cluster"
  test:
    description: Trigger test function to search all files in base_directory and generate files list.
    required: false
outputs:
  matrix:
    description: 'The include matrix that will be used to generate jobs.'
    value: ${{ steps.tg-dir-check.outputs.matrix }}
runs:
  using: 'composite'
  steps:
    - id: tg-dir-check
      env:
        FILES: ${{ inputs.files }}
        BASE_DIRECTORY: ${{ inputs.base-directory }}
        PROVIDERS: ${{ inputs.providers }}
        ENVS: ${{ inputs.environments }}
        REGIONS: ${{ inputs.regions }}
        RESOURCE_GROUPS: ${{ inputs.resource_groups }}
      run: ${{ github.action_path }}/main.sh
      shell: bash
branding:
  icon: 'grid'
  color: 'green'
